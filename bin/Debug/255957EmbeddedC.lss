
bin\Debug\255957EmbeddedC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000148  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .fuse         00000003  00820000  00820000  000001bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  000001bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000038  00000000  00000000  000001df  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000124  00000000  00000000  00000217  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000b4  00000000  00000000  0000033b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000133  00000000  00000000  000003ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000524  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000b9  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 a2 00 	jmp	0x144	; 0x144 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

#define switch1 PD0
#define switch2 PD1

int main(void)
{
  80:	df 93       	push	r29
  82:	cf 93       	push	r28
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
    DDRB |= (1 << LED);
  88:	a4 e2       	ldi	r26, 0x24	; 36
  8a:	b0 e0       	ldi	r27, 0x00	; 0
  8c:	e4 e2       	ldi	r30, 0x24	; 36
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	80 81       	ld	r24, Z
  92:	81 60       	ori	r24, 0x01	; 1
  94:	8c 93       	st	X, r24
    DDRD &= ~(1 << switch1);
  96:	aa e2       	ldi	r26, 0x2A	; 42
  98:	b0 e0       	ldi	r27, 0x00	; 0
  9a:	ea e2       	ldi	r30, 0x2A	; 42
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	8e 7f       	andi	r24, 0xFE	; 254
  a2:	8c 93       	st	X, r24
    PORTD |= (1 << switch1);
  a4:	ab e2       	ldi	r26, 0x2B	; 43
  a6:	b0 e0       	ldi	r27, 0x00	; 0
  a8:	eb e2       	ldi	r30, 0x2B	; 43
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	81 60       	ori	r24, 0x01	; 1
  b0:	8c 93       	st	X, r24

    DDRD &= ~(1 << switch2);
  b2:	aa e2       	ldi	r26, 0x2A	; 42
  b4:	b0 e0       	ldi	r27, 0x00	; 0
  b6:	ea e2       	ldi	r30, 0x2A	; 42
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	8d 7f       	andi	r24, 0xFD	; 253
  be:	8c 93       	st	X, r24
    PORTD |= (1 << switch2);
  c0:	ab e2       	ldi	r26, 0x2B	; 43
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	eb e2       	ldi	r30, 0x2B	; 43
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	82 60       	ori	r24, 0x02	; 2
  cc:	8c 93       	st	X, r24

    // Insert code

    while (1)
    {
        if (!(PIND & (1 << switch1))) // pressed is on
  ce:	e9 e2       	ldi	r30, 0x29	; 41
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	88 2f       	mov	r24, r24
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	81 70       	andi	r24, 0x01	; 1
  da:	90 70       	andi	r25, 0x00	; 0
  dc:	00 97       	sbiw	r24, 0x00	; 0
  de:	c9 f4       	brne	.+50     	; 0x112 <main+0x92>
        {
            if (!(PIND & (1 << switch2)))
  e0:	e9 e2       	ldi	r30, 0x29	; 41
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	88 2f       	mov	r24, r24
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	82 70       	andi	r24, 0x02	; 2
  ec:	90 70       	andi	r25, 0x00	; 0
  ee:	00 97       	sbiw	r24, 0x00	; 0
  f0:	41 f4       	brne	.+16     	; 0x102 <main+0x82>
            {
                PORTB &= ~(1 << LED);
  f2:	a5 e2       	ldi	r26, 0x25	; 37
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	e5 e2       	ldi	r30, 0x25	; 37
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	8e 7f       	andi	r24, 0xFE	; 254
  fe:	8c 93       	st	X, r24
 100:	e6 cf       	rjmp	.-52     	; 0xce <main+0x4e>
            }
            else
            {
                PORTB |= (1 << LED);
 102:	a5 e2       	ldi	r26, 0x25	; 37
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	e5 e2       	ldi	r30, 0x25	; 37
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	81 60       	ori	r24, 0x01	; 1
 10e:	8c 93       	st	X, r24
 110:	de cf       	rjmp	.-68     	; 0xce <main+0x4e>

            //_delay_ms(1000);
        }
        else
        {
            if (!(PIND & (1 << switch2)))
 112:	e9 e2       	ldi	r30, 0x29	; 41
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	80 81       	ld	r24, Z
 118:	88 2f       	mov	r24, r24
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	82 70       	andi	r24, 0x02	; 2
 11e:	90 70       	andi	r25, 0x00	; 0
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	41 f4       	brne	.+16     	; 0x134 <main+0xb4>
            {
                PORTB |= (1 << LED);
 124:	a5 e2       	ldi	r26, 0x25	; 37
 126:	b0 e0       	ldi	r27, 0x00	; 0
 128:	e5 e2       	ldi	r30, 0x25	; 37
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	81 60       	ori	r24, 0x01	; 1
 130:	8c 93       	st	X, r24
 132:	cd cf       	rjmp	.-102    	; 0xce <main+0x4e>
            }
            else
            {
                PORTB &= ~(1 << LED);
 134:	a5 e2       	ldi	r26, 0x25	; 37
 136:	b0 e0       	ldi	r27, 0x00	; 0
 138:	e5 e2       	ldi	r30, 0x25	; 37
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	8e 7f       	andi	r24, 0xFE	; 254
 140:	8c 93       	st	X, r24
 142:	c5 cf       	rjmp	.-118    	; 0xce <main+0x4e>

00000144 <_exit>:
 144:	f8 94       	cli

00000146 <__stop_program>:
 146:	ff cf       	rjmp	.-2      	; 0x146 <__stop_program>
